1. Python iterator
2. Python decorator 
3. Python generator 
4. Python deep copy
5. Python shallow copy
6. Python repr methon 
7. 

# def divide(a, b):
#     try:
    
#         assert b != 0, "You cannot give denomenator 0."
#         return a/b
#     except:
#         print("Error message, divide by 0")

# div = divide(2, 2)
# print(div)

# import copy
# list1 = [1,3, 4, 5, 6, 43]
# list2 = copy.copy(list1)
# print(list2)

# class demo:
#     def __init__(self, a, b):
#         self.a = a
#         self.b = b

#     def __repr__(self):
#         return '__repr__ for demo'
    
#     def __str__(self):
#         return "__str__for demo"

# o = demo(1, 2)

# print(str(o))
# print(repr(o))


# pip install virtualenv
# virtualenv <name>
# virtualenv activated



# import pygame
# background_colour = (255,255,255)
# (width, height) = (300, 200)
# screen = pygame.display.set_mode((width, height))
# pygame.display.set_caption('Tutorial 1')
# screen.fill(background_colour)
# pygame.display.flip()
# running = True
# while running:
#     for event in pygame.event.get():
#         if event.type == pygame.QUIT:
#             pygame.quit()
#             running = False 
# import numpy as np
# array = np.array([[0,1,3],[9,8,7],[8,3,2]])
# print(array)